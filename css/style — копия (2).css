/* Подключение шрифта "WinterTrees" из папки fonts */
@font-face {
  font-family: 'WinterTrees'; 							   /* Имя, под которым будет использоваться шрифт */
  src: url('../fonts/WinterTrees.ttf') format('truetype'); /* Путь к файлу шрифта и его формат */
}

/* Глобальные стили для всех элементов */
*{
	margin: 0; 				/* Убирает внешние отступы (margin) по умолчанию */
	padding: 0; 			/* Убирает внутренние отступы (padding) по умолчанию */
	box-sizing: border-box; /* Учитывает padding и border в общей ширине и высоте элемента */
}

html, body {
	margin: 0;  					/* Убирает внешние отступы по умолчанию у элементов <html> и <body> */
	padding: 0; 					/* Убирает внутренние отступы по умолчанию у элементов <html> и <body> */
    font-family: Arial, sans-serif; /* Устанавливает шрифт по умолчанию для всей страницы */
    background-color: #e8f5e9;	    /* Задаёт светло-зелёный фон страницы */
    color: #2e7d32; 				/* Задаёт тёмно-зелёный цвет текста */
    height: 100%; 					/* Устанавливает высоту html и body на 100% от окна браузера */
    display: flex; 					/* Включает flex-контейнер для body (и html, т.к. они оба указаны) */
    flex-direction: column; 		/* Устанавливает вертикальное направление флекс-элементов */
}

main {
    position: relative; 	 /* Позволяет позиционировать вложенные элементы относительно блока main */
    min-height: 100%; 			 /* Минимальная высота main — 100% от родителя */
    flex: 1; 				 /* Заставляет main занимать всё доступное пространство между шапкой и подвалом */
	display: flex;           /* Устанавливает flex-контейнер, что позволяет удобно управлять расположением дочерних элементов */
	width: 100%;             /* Устанавливает ширину элемента на 100% от ширины родителя */
	flex-direction: column;  /* Располагает дочерние элементы в колонку (вертикально) */
}

footer {
  position: relative;       /* Changed to relative to place footer at the end of content */
  width: 100%;           /* Заставляет футер занимать всю ширину экрана */
  color: white;          /* Устанавливает белый цвет текста */
  text-align: center;    /* Центрирует текст по горизонтали */
  z-index: 2;            /* Помещает футер выше других элементов, если у них меньший z-index */
}

.grass {
  width: 50%;            /* Устанавливает ширину элемента на 50% от ширины родителя */
  height: 30%;           /* Высота — 30% от высоты родителя */
  object-fit: cover;     /* Изображение масштабируется, чтобы заполнить контейнер, сохраняя пропорции и обрезая лишнее */
  margin-bottom: -30px;  /* Отрицательный нижний отступ: элемент "заходит" на нижележащий контент */
}

.image-row {
  display: flex;            /* Устанавливает flex-контейнер для горизонтального размещения элементов */
  justify-content: center;  /* Центрирует дочерние элементы по горизонтали */
  flex-wrap: wrap;          /* Позволяет элементам переноситься на новую строку, если не помещаются */
}

header {
  position: relative;            /* Позволяет позиционировать дочерние элементы абсолютно внутри хедера */
  width: 100%;                   /* Хедер занимает всю ширину родительского контейнера (обычно окна браузера) */
  min-height: 40%;               /* Минимальная высота — 40% от высоты родителя или окна */
  background-color: transparent; /* Фон прозрачный, позволяет "видеть" элементы за хедером, если есть */
  overflow: hidden;              /* Скрывает всё, что выходит за пределы хедера (например, изображения) */
  padding-bottom: 0;             /* Убирает нижний внутренний отступ */
  display: flex;                 /* Устанавливает хедер как flex-контейнер */
  flex-direction: column;        /* Дочерние элементы располагаются вертикально (в столбик) */
  align-items: center;           /* Центрирует дочерние элементы по горизонтали */
}

.header-image {
  position: absolute;     /* Позволяет точно позиционировать изображение внутри родителя (обычно header) */
  width: 100%;            /* Изображение занимает всю ширину контейнера */
  height: 50%;            /* Высота — 50% от высоты родителя */
  object-fit: cover;      /* Изображение обрезается и масштабируется так, чтобы заполнить контейнер без искажения */
  z-index: 1;             /* Устанавливает слой изображения ниже других элементов, у которых z-index выше */
}

.header-nebo {
  position: absolute;     /* Абсолютное позиционирование внутри родителя (например, <header>) */
  top: 0;                 /* Прижимает к верхнему краю контейнера */
  left: 0;                /* Прижимает к левому краю */
  width: 100%;            /* Занимает всю ширину контейнера */
  height: 250px;          /* Задаёт высоту 250px — увеличено, чтобы закрыть также область навигации */
  object-fit: cover;      /* Масштабирует изображение без искажения, заполняя весь контейнер */
  z-index: 0;             /* Помещает элемент на самый задний план */
  filter: blur(2px);      /* Добавляет лёгкое размытие — создаёт эффект глубины или туманного неба */
}

.header-title {
  position: relative;               /* Позволяет позиционировать элемент относительно его нормального положения */
  top: 70%;                         /* Смещает заголовок вниз на 70% от высоты родителя */
  left: 50%;                        /* Смещает влево на 50% от ширины родителя */
  transform: translate(-50%, -50%); /* Центрирует заголовок как по вертикали, так и по горизонтали */
  color: #66bb6a;                   /* Ярко-зелёный цвет текста */
  font-size: 8rem;                  /* Очень крупный размер шрифта — для выразительного заголовка */
  font-weight: bolder;              /* Очень жирное начертание */
  text-shadow:                      /* Создаёт объёмную тень вокруг текста, придавая "светящийся" эффект */
    2px 2px 10px rgba(0, 0, 0, 0.5),
    -2px 2px 10px rgba(0, 0, 0, 0.5),
    2px -2px 10px rgba(0, 0, 0, 0.5),
    -2px -2px 10px rgba(0, 0, 0, 0.5);
  font-family: 'WinterTrees', sans-serif; /* Уникальный декоративный шрифт, с запасным — без засечек */
  z-index: 1;                             /* Помещает заголовок над фоновыми элементами */
}

nav {
  position: relative;            /* Позволяет навигации позиционироваться относительно её обычного места */
  z-index: 2;                    /* Устанавливает слой навигации выше фона и других элементов с меньшим z-index */
  padding: 10px 0;          	 /* Добавляет отступы сверху и снизу, делая навигацию более читаемой */
  text-align: center;      	 	 /* Центрирует текст и элементы (ссылки) внутри навигации */
  background-color: transparent; /* Фон прозрачный, позволяя видеть всё, что под ним */
  width: 100%;             	 	 /* Навигация занимает всю ширину родительского контейнера */
  margin-top: 40px;        	 	 /* Добавляет верхний отступ, чтобы отделить навигацию от других элементов */
}

nav ul {
  list-style: none;          /* Убирает стандартные маркеры списка (пункты) */
  padding: 10px;             /* Добавляет внутренний отступ вокруг списка */
  margin: 0;                 /* Убирает стандартные внешние отступы у списка */
  display: flex;             /* Выстраивает элементы списка (ссылки) в ряд */
  justify-content: center;   /* Центрирует элементы списка по горизонтали */
  flex-wrap: nowrap;         /* Запрещает перенос элементов на новую строку */
  gap: 20px;                 /* Добавляет пространство между элементами списка */
  overflow-x: auto;          /* Включает горизонтальный скролл, если элементы не помещаются в пределах экрана */
  scroll-behavior: smooth;   /* Плавная прокрутка при переходах между пунктами навигации */
}

nav li {
  flex: 0 0 auto; /* Устанавливает, что элементы списка (кнопки) не будут сжиматься и не будут растягиваться */
}

nav a {
  padding: 10px 20px;                    	  /* Добавляет отступы вокруг текста ссылки */
  background-color: rgba(255, 255, 255, 0.5); /* Полупрозрачный белый фон (с 50% прозрачности) */
  color: #2e7d32;                       	  /* Тёмно-зелёный цвет текста */
  text-decoration: none;                 	  /* Убирает подчеркивание с ссылок */
  border-radius: 10px;                   	  /* Закругляет углы ссылки */
  font-weight: bold;                    	  /* Делает текст ссылки жирным */
  transition: background-color 0.7s;     	  /* Плавный переход фона при изменении */
  display: inline-flex;                  	  /* Размещает ссылку как inline-flex элемент (внутреннее выравнивание) */
  align-items: center;                   	  /* Центрирует текст и элементы по вертикали */
  gap: 6px;                             	  /* Добавляет промежуток между текстом и возможными иконками внутри ссылки */
  white-space: nowrap;                  	  /* Не позволяет тексту переноситься на новую строку */
}

nav a:hover,
nav a.active {
  background-color: rgba(255, 255, 255, 1); /* При наведении курсора или когда ссылка активна, фон становится полностью белым */
}

.nav-link {
  display: flex;              /* Использует flex-контейнер для выравнивания содержимого */
  align-items: center;        /* Центрирует элементы по вертикали в контейнере */
  gap: 8px;                   /* Добавляет расстояние между элементами внутри ссылки (например, между текстом и иконкой) */
  text-decoration: none;      /* Убирает стандартное подчеркивание у ссылок */
}

.icon {
  width: 20px;               		/* Устанавливает ширину и высоту иконки в 20px */
  height: 20px;              		/* Устанавливает высоту иконки в 20px */
  transition: transform 0.2s ease;  /* Добавляет плавное изменение трансформации (например, при изменении размера или вращении) за 0.2 секунды */
}

/* Увеличиваем только иконку при наведении на всю ссылку */
.nav-link:hover .icon {
  transform: scale(1.2);  /* Увеличивает размер иконки на 20% при наведении на родительский элемент .nav-link */
}

/* Стили для всех секций */
.page {
	position: absolute; 			   	      /* Позволяет позиционировать страницу независимо от потока документа */
	opacity: 0; 							  /* Делает элемент полностью прозрачным */
	visibility: hidden; 					  /* Прячет элемент визуально и делает его недоступным для клика */
	transition: opacity 0.5s, transform 0.5s; /* Плавный переход для появления и смещения */
	transform: translateY(20px);			  /* Смещает элемент вниз при скрытии — создаёт эффект "выпадания" при появлении */
}
#home:target ~ main .home,
#about:target ~ main .about,
#gallery:target ~ main .gallery,
#contact:target ~ main .contact {
	position: relative; 	   /* Делает элемент позиционируемым, возвращает в поток документа */
	opacity: 1; 			   /* Делает страницу видимой */
	visibility: visible;       /* Показывает элемент */
	transform: translateY(0);  /* Отменяет смещение — элемент возвращается в нормальное положение */
	z-index: 1; 			   /* Помещает видимую страницу выше других */
	padding: 0; 			   /* Убирает отступы */
	margin: 20px 0; 		   /* Changed to remove auto to prevent centering */
	border-radius: 20px; 	   /* Скруглённые углы блока */
	background-color: #c8e6c9; /* Светло-зелёный фон активной страницы */
	width: 100%; 			   /* Changed to full width */
	flex-direction: column;    /* Располагает элементы по вертикали */
	justify-content: center;   /* Центрирует элементы по вертикали */
	align-items: center;       /* Центрирует элементы по горизонтали */
}

/* Убираем фон только для галереи */
#gallery:target ~ main .gallery {
  background-color: transparent; /* Убираем фон */
}

body:not(:has(:target)) main .home {
	position: relative; 		/* Ставит .home в нормальный поток документа */
	opacity: 1; 				/* Делает .home полностью видимой */
	visibility: visible; 		/* Убедительно показывает элемент (без hidden) */
	transform: translateY(0);   /* Возвращает элемент в исходное положение (без смещения) */
	z-index: 1; 			    /* Помещает .home выше других слоёв, если есть наложения */
}

.ecowood-section {
	display: flex; 		 /* Используем Flexbox для размещения дочерних элементов (текст и изображение) в строку */
	padding: 0; 		 /* Убираем внутренние отступы у всей секции */
	margin: 0; 		     /* Убираем внешние отступы */
	height: 100%; 		 /* Высота секции равна 100% от родителя (можно адаптировать под задачу) */
	overflow: hidden; 	 /* Всё, что выходит за границы блока, будет скрыто */
	border-radius: 20px; /* Скругляем углы всей секции */
}

.ecowood-text {
	flex: 1; 			    /* Заставляем текстовый блок занимать всё свободное пространство */
	padding: 40px; 			/* Добавляем внутренние отступы вокруг текста */
	box-sizing: border-box; /* Включает padding в расчёт общей ширины/высоты, чтобы ничего не "выпирало" */
}

.ecowood-image {
	position: relative;  /* Готовим блок под возможное позиционирование вложенных элементов (например, иконок) */
	height: auto;		 /* Высота определяется содержимым (например, изображением) */
	width: 30%; 		 /* Задаём ширину блока с изображением — 30% от ширины секции */
	overflow: hidden;    /* Скрываем лишнее, если изображение выходит за рамки блока */
	border-radius: 20px; /* Скругляем углы блока с изображением */
}

.images {
	position: absolute; /* Абсолютное позиционирование: элемент будет наложен поверх родительского */
	top: 0; 			/* Прижимаем верхнюю грань к верхнему краю родителя */
	left: 0; 			/* Прижимаем левую грань к левому краю родителя */
	right: 0;		    /* Прижимаем правую грань к правому краю родителя */
	bottom: 0; 			/* Прижимаем нижнюю грань к нижнему краю родителя */
}

.images img {
	display: block; 	/* Убираем лишний отступ снизу, который появляется у изображений по умолчанию */
	width: 100%; 		/* Ширина изображения равна ширине родительского контейнера */
	height: 100%; 		/* Высота изображения равна высоте родителя */
	object-fit: cover;  /* Изображение будет масштабироваться, чтобы полностью заполнить блок,
	                      при этом обрезая лишнее, но сохраняя пропорции */
}

.slider {
  position: relative;         /* Позволяет позиционировать элементы внутри слайдера относительно его нормального положения */
  width: 80%;                 /* Устанавливает ширину слайдера на 80% от ширины родительского контейнера */
  max-width: 700px;           /* Ограничивает максимальную ширину слайдера 700px */
  margin: auto;               /* Центрирует слайдер по горизонтали */
  overflow: hidden;           /* Скрывает содержимое, которое выходит за пределы контейнера (например, изображения, выходящие за рамки слайдера) */
  border-radius: 20px;        /* Закругляет углы слайдера */
  aspect-ratio: 16 / 9;       /* Устанавливает соотношение сторон 16:9, чтобы высота слайдера автоматически адаптировалась к ширине */
}

.slides {
  display: flex;                          /* Выстраивает элементы в строку с использованием flex-контейнера */
  transition: transform 0.5s ease-in-out; /* Плавное изменение позиции слайдов при их переключении (0.5 секунд, плавное начало и окончание) */
  width: 100%;                            /* Занимает всю ширину родительского элемента */
  height: 100%;                           /* Занимает всю высоту родительского элемента */
}

.slide {
  flex: 0 0 100%;                       /* Каждый слайд занимает 100% ширины контейнера, без сжатия или растягивания */
  max-width: 100%;                      /* Ограничивает максимальную ширину слайда */
  height: 100%;                         /* Слайд занимает всю высоту контейнера */
}

.slide img,
.slide video {
  width: 100%;                          /* Изображения и видео растягиваются на всю ширину слайда */
  height: 100%;                         /* Изображения и видео растягиваются на всю высоту слайда */
  object-fit: cover;                    /* Изображения и видео обрезаются и масштабируются так, чтобы заполнить весь контейнер, сохраняя пропорции */
  display: block;                       /* Убирает возможные отступы вокруг изображений и видео */
}

/* Индикаторы */
.indicators {
  position: absolute;                 /* Позволяет позиционировать индикаторы относительно родительского контейнера */
  top: 10px;                          /* Располагает индикаторы на 10px ниже верхнего края контейнера */
  left: 50%;                          /* Центрирует индикаторы по горизонтали относительно родителя */
  transform: translateX(-50%);        /* Дополнительное центрирование индикаторов, сдвигая их влево на 50% ширины */
  display: flex;                      /* Использует flex для горизонтального размещения индикаторов */
  gap: 10px;                          /* Устанавливает расстояние между индикаторами */
  z-index: 10;                        /* Устанавливает индикаторы выше большинства других элементов */
}

.indicator {
  width: 15px;                                		 /* Ширина индикатора */
  height: 15px;                               		 /* Высота индикатора */
  border-radius: 50%;                          		 /* Делает индикатор кругом */
  background-color: rgba(255, 255, 255, 0.5);  		 /* Полупрозрачный белый цвет для стандартного состояния */
  transition: background-color 0.3s, transform 0.3s; /* Плавные изменения фона и масштаба при взаимодействии */
}

.indicator.active {
  background-color: white;           	  /* Белый цвет для активного индикатора */
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.4); /* Тень для выделения активного индикатора */
  transform: scale(1.2);               	  /* Увеличивает размер активного индикатора на 20% */
}

/* Кнопки */
.prev,
.next {
  position: absolute;              /* Абсолютное позиционирование кнопок внутри слайдера */
  top: 50%;                        /* Размещение кнопок по вертикали в центре слайдера */
  transform: translateY(-50%);     /* Центрирование кнопок по вертикали */
  background: rgba(0,0,0,0.5);     /* Полупрозрачный чёрный фон для кнопок */
  color: white;                    /* Белый цвет текста (стрелки) */
  border: none;                    /* Убирает стандартную рамку кнопок */
  font-size: 2rem;                 /* Устанавливает размер шрифта для стрелок */
  padding: 3px 12px;               /* Добавляет внутренние отступы вокруг текста стрелки */
  cursor: pointer;                 /* Курсор в виде руки при наведении на кнопки */
  z-index: 10;                     /* Устанавливает кнопки на верхний слой, чтобы они были видны поверх других элементов */
  border-radius: 4px;              /* Закругляет углы кнопок */
  user-select: none;               /* Запрещает выделение текста на кнопке */
  opacity: 0.8;                    /* Устанавливает начальную прозрачность кнопок */
}

.prev { left: 10px; }              /* Размещает кнопку "предыдущий слайд" слева */
.next { right: 10px; }             /* Размещает кнопку "следующий слайд" справа */

.prev:hover,
.next:hover {
  background: rgba(0,0,0,0.8);     /* Увеличивает прозрачность фона кнопок при наведении */
  opacity: 1;                      /* Убирает прозрачность, делает кнопки полностью видимыми при наведении */
}

/* Стили для элемента с листьями винила */
.vinyl-leaves {
  width: 100px;             /* Ширина блока */
  height: 100px;            /* Высота блока */
  position: fixed;          /* Фиксированное позиционирование (не зависит от прокрутки) */
  bottom: 10px;             /* Отступ снизу экрана */
  left: 0px;                /* Прикреплён к левому краю экрана */
  z-index: 999;             /* Уровень наложения, чтобы элемент находился поверх других */
}

/* Стили для контейнера с винилом */
.vinyl-container {
  width: 60px;              /* Ширина контейнера */
  height: 60px;             /* Высота контейнера */
  position: fixed;          /* Фиксированное позиционирование */
  bottom: 30px;             /* Отступ снизу экрана */
  left: 20px;               /* Отступ слева от экрана */
  cursor: pointer;          /* Курсор меняется на указатель при наведении */
  z-index: 1000;            /* Выше, чем у .vinyl-leaves, чтобы быть поверх него */
  display: flex;            /* Используем flexbox для выравнивания содержимого */
  align-items: center;      /* Вертикальное выравнивание содержимого по центру */
}

/* Стили для элемента с id="vinyl" */
#vinyl {
  width: 100%;                       	  /* Ширина занимает всё пространство родителя */
  height: 100%;                     	  /* Высота — также на весь родительский элемент */
  border-radius: 50%;              		  /* Скругление до круга (предполагается, что элемент квадратный) */
  transition: transform 0.3s ease-in-out; /* Плавный переход при изменении transform */
}

/* Класс для вращения винила */
.rotate {
  animation: spin 4s linear infinite; /* Анимация вращения: 4 секунды, равномерно, бесконечно */
}

.vinyl-container:hover #vinyl {
  transform: scale(1.1); /* Увеличение на 10% */
}

/* Определение анимации вращения */
@keyframes spin {
  from { transform: rotate(0deg); }   /* Начальное состояние — без поворота */
  to { transform: rotate(360deg); }   /* Конечное состояние — полный оборот */
}

/* Стили для названия трека */
.track-name {
  margin-left: 12px;                 /* Отступ слева от соседнего элемента */
  font-size: 14px;                   /* Размер шрифта */
  color: white;                      /* Цвет текста */
  background: rgba(0, 0, 0, 0.7);    /* Полупрозрачный тёмный фон */
  padding: 6px 10px;                 /* Внутренние отступы по вертикали и горизонтали */
  border-radius: 8px;                /* Скруглённые углы */
  white-space: nowrap;               /* Запрет на перенос текста */
  opacity: 0;                        /* Скрыто по умолчанию */
  transform: translateY(5px);        /* Слегка сдвинуто вниз при скрытии */
  transition: opacity 0.3s ease,     /* Плавное появление */
              transform 0.3s ease;   /* Плавное движение вверх при появлении */
  pointer-events: none;              /* Отключение взаимодействия с мышью */
}

/* Показываем название трека при наведении на контейнер винила */
.vinyl-container:hover .track-name {
  opacity: 1;                        /* Делаем видимым */
  transform: translateY(0);          /* Возвращаем в исходное положение */
}

.loader {
  background: #F10C49;
  width: 22px; 						   /* Устанавливает ширину элемента на 22 пикселя */
  aspect-ratio: 1; 					   /* Обеспечивает пропорции 1:1 для элемента (круглая форма) */
  border-radius: 50%;				   /* Делает элемент круглым */
  animation: l10 1.5s infinite linear; /* Применяет анимацию 'l10' с длительностью 1.5 секунды, бесконечным повтором и линейным движением */
}

@keyframes l10 {
  /* Начальная позиция (0%) - все тени находятся в разных углах */
  0% {
    box-shadow: 
      0 -30px #F4DD51, calc(30px*0.707) calc(-30px*0.707) #E3AAD6, 30px 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 12.5% - тени немного смещаются, начинают образовывать круг */
  12.5% {
    box-shadow: 
      0 0 #F4DD51, calc(30px*0.707) calc(-30px*0.707) #E3AAD6, 30px 0 #F4DD51, calc(30px*0.707) calc(30px*0.707) #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 25% - тени продолжают двигаться, круг расширяется */
  25% {
    box-shadow: 
      0 0 #F4DD51, 0 0 #E3AAD6, 30px 0 #F4DD51, calc(30px*0.707) calc(30px*0.707) #E3AAD6,
      0 30px #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 37.5% - тени продолжают смещаться и образуют более широкий круг */
  37.5% {
    box-shadow: 
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, calc(30px*0.707) calc(30px*0.707) #E3AAD6,
      0 30px #F4DD51, calc(-30px*0.707) calc(30px*0.707) #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 50% - тени почти полностью разошлись, центр выглядит пустым */
  50% {
    box-shadow: 
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6,
      0 30px #F4DD51, calc(-30px*0.707) calc(30px*0.707) #E3AAD6, -30px 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 62.5% - тени сдвигаются обратно, формируя окружность */
  62.5% {
    box-shadow: 
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, calc(-30px*0.707) calc(30px*0.707) #E3AAD6, -30px 0 #F4DD51, calc(-30px*0.707) calc(-30px*0.707) #E3AAD6;
  }

  /* 75% - снова возвращаемся к начальной точке, но тени стали смещаться */
  75% {
    box-shadow: 
      0 -30px #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, -30px 0 #F4DD51, calc(-30px*0.707) calc(-30px*0.707) #E3AAD6;
  }

  /* 87.5% - возвращаемся почти к начальной позиции */
  87.5% {
    box-shadow: 
      0 -30px #F4DD51, calc(30px*0.707) calc(-30px*0.707) #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, calc(-30px*0.707) calc(-30px*0.707) #E3AAD6;
  }

  /* 100% - снова вернулись к исходной позиции (круг из теней) */
  100% {
    box-shadow: 
      0 -30px #F4DD51, calc(30px*0.707) calc(-30px*0.707) #E3AAD6, 30px 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }
}

.loader-overlay {
  position: fixed;               	  /* Фиксирует элемент на экране, чтобы он оставался на месте при прокрутке */
  top: 0;                             /* Размещение элемента от верхней границы окна */
  left: 0;                            /* Размещение элемента от левой границы окна */
  width: 100%;                        /* Ширина элемента на весь экран */
  height: 100%;                       /* Высота элемента на весь экран */
  background: rgba(232, 245, 233, 1); /* Белая полупрозрачная подложка с непрозрачностью 1 (плотный цвет) */
  display: flex;                      /* Использует Flexbox для выравнивания контента */
  align-items: center;                /* Центрирует контент по вертикали */
  justify-content: center;            /* Центрирует контент по горизонтали */
  z-index: 9999;                      /* Устанавливает очень высокий слой для отображения поверх всех других элементов */
}

/* Курсор для всего сайта */
body {
  cursor: url('../other/Arrow.cur'), auto; /* Устанавливает кастомный курсор для всего сайта */
}

/* Курсор при наведении на ссылку и кнопку */
a,
button:hover {
  cursor: url('../other/UpArrow.cur'), auto; /* Устанавливает кастомный курсор при наведении на ссылку или кнопку */
}

/* Media query for mobile devices */
@media (max-width: 768px) {
  .page {
    width: 100%; /* Full width on mobile */
    margin: 10px 0; /* Reduced margin for mobile */
  }

  .ecowood-section {
    flex-direction: column; /* Stack text and image vertically on mobile */
    align-items: center;
  }

  .ecowood-text {
    padding: 20px; /* Reduced padding for mobile */
  }

  .ecowood-image {
    width: 100%; /* Full width for images on mobile */
    height: auto;
  }

  .header-title {
    font-size: 4rem; /* Smaller font size for mobile */
  }
}
/* Подключение шрифта "WinterTrees" из папки fonts */
@font-face {
  font-family: 'WinterTrees'; /* Имя, под которым будет использоваться шрифт */
  src: url('../fonts/WinterTrees.ttf') format('truetype'); /* Путь к файлу шрифта и его формат */
}

/* Глобальные стили для всех элементов */
*{
	margin: 0; /* Убирает внешние отступы (margin) по умолчанию */
	padding: 0; /* Убирает внутренние отступы (padding) по умолчанию */
	box-sizing: border-box; /* Учитывает padding и border в общей ширине и высоте элемента */
}

html, body {
    font-family: Arial, sans-serif; /* Устанавливает шрифт по умолчанию для всей страницы */
    background-color: #e8f5e9; /* Задаёт светло-зелёный фон страницы */
    color: #2e7d32; /* Задаёт тёмно-зелёный цвет текста */
    height: 100%; /* Устанавливает высоту html и body на 100% от окна браузера */
    display: flex; /* Включает flex-контейнер для body (и html, т.к. они оба указаны) */
    flex-direction: column; /* Устанавливает вертикальное направление флекс-элементов */
}

main {
    position: relative; /* Позволяет позиционировать вложенные элементы относительно блока main */
    min-height: 100%; /* Минимальная высота main — 100% от родителя */
    flex: 1; /* Заставляет main занимать всё доступное пространство между шапкой и подвалом */
	margin-top: -50px;

}

header {
  position: relative;
  width: 100%;
  min-height: 40%;
  background-color: transparent;
  overflow: hidden;
  padding-bottom: 100px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.header-image {
	position: absolute;
	width: 100%;
	height: 50%;
	object-fit: cover;
	z-index: 1;
}

.header-nebo {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 250px; /* Увеличено, чтобы фон растянулся и под навигацию */
	object-fit: cover;
	z-index: 0;
}

.header-title {
	position: absolute;
	top: 25%;
	left: 50%;
	transform: translate(-50%, -50%);
	color: #66bb6a;
	font-size: 8rem;
	font-weight: bolder;
	text-shadow: 
		2px 2px 10px rgba(0, 0, 0, 0.5),
		-2px 2px 10px rgba(0, 0, 0, 0.5),
		2px -2px 10px rgba(0, 0, 0, 0.5),
		-2px -2px 10px rgba(0, 0, 0, 0.5);
	font-family: 'WinterTrees', sans-serif;
	z-index: 2;
}

nav {
  position: relative;
  z-index: 2;
  padding: 10px 0;
  text-align: center;
  background-color: transparent;
  width: 100%;
  margin-top: 150px;
}

nav ul {
  list-style: none;
  padding: 10px;
  margin: 0;

  display: flex;
  justify-content: center;
  flex-wrap: nowrap;       /* Не даём переноситься кнопкам */
  gap: 20px;               /* Расстояние между кнопками */
  overflow-x: auto;        /* Скролл при маленьком экране */
  scroll-behavior: smooth;
}

nav li {
  flex: 0 0 auto; /* Кнопки не сжимаются и не растягиваются */
}

nav a {
  padding: 10px 20px;
  background-color: rgba(255, 255, 255, 0.5); /* Только фон полупрозрачный */
  color: #2e7d32;
  text-decoration: none;
  border-radius: 10px;
  font-weight: bold;
  transition: background-color 0.7s;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  white-space: nowrap; /* Не даём тексту переноситься */
}

nav a:hover,
nav a.active {
  background-color: rgba(255, 255, 255, 1);
}


.icon {
  width: 20px;
  height: 20px;
  transition: transform 0.2s ease;
  filter: none; /* Убедимся, что иконки не полупрозрачные */
}




.page {
	position: absolute; /* Позволяет позиционировать страницу независимо от потока документа */
	opacity: 0; /* Делает элемент полностью прозрачным */
	visibility: hidden; /* Прячет элемент визуально и делает его недоступным для клика */
	transition: opacity 0.5s, transform 0.5s; /* Плавный переход для появления и смещения */
	transform: translateY(20px); /* Смещает элемент вниз при скрытии — создаёт эффект "выпадания" при появлении */
}

#home:target ~ main .home,
#about:target ~ main .about,
#gallery:target ~ main .gallery,
#contact:target ~ main .contact {
	position: relative; /* Делает элемент позиционируемым, возвращает в поток документа */
	opacity: 1; /* Делает страницу видимой */
	visibility: visible; /* Показывает элемент */
	transform: translateY(0); /* Отменяет смещение — элемент возвращается в нормальное положение */
	z-index: 1; /* Помещает видимую страницу выше других */
	padding: 0; /* Убирает отступы */
	margin: 40px; /* Добавляет внешний отступ со всех сторон */
	border-radius: 20px; /* Скруглённые углы блока */
	background-color: #c8e6c9; /* Светло-зелёный фон активной страницы */
}

body:not(:has(:target)) main .home {
	position: relative; /* Ставит .home в нормальный поток документа */
	opacity: 1; /* Делает .home полностью видимой */
	visibility: visible; /* Убедительно показывает элемент (без hidden) */
	transform: translateY(0); /* Возвращает элемент в исходное положение (без смещения) */
	z-index: 1; /* Помещает .home выше других слоёв, если есть наложения */
}

.ecowood-section {
	display: flex; /* Используем Flexbox для размещения дочерних элементов (текст и изображение) в строку */
	padding: 0; /* Убираем внутренние отступы у всей секции */
	margin: 0; /* Убираем внешние отступы */
	height: 100%; /* Высота секции равна 100% от родителя (можно адаптировать под задачу) */
	overflow: hidden; /* Всё, что выходит за границы блока, будет скрыто */
	border-radius: 20px; /* Скругляем углы всей секции */
}

.ecowood-text {
	flex: 1; /* Заставляем текстовый блок занимать всё свободное пространство */
	padding: 40px; /* Добавляем внутренние отступы вокруг текста */
	box-sizing: border-box; /* Включает padding в расчёт общей ширины/высоты, чтобы ничего не "выпирало" */
}

.ecowood-image {
	position: relative; /* Готовим блок под возможное позиционирование вложенных элементов (например, иконок) */
	height: auto; /* Высота определяется содержимым (например, изображением) */
	width: 30%; /* Задаём ширину блока с изображением — 30% от ширины секции */
	overflow: hidden; /* Скрываем лишнее, если изображение выходит за рамки блока */
	border-radius: 20px; /* Скругляем углы блока с изображением */
}


.image-gradient {
	position: absolute; /* Абсолютное позиционирование: элемент будет наложен поверх родительского */
	top: 0; /* Прижимаем верхнюю грань к верхнему краю родителя */
	left: 0; /* Прижимаем левую грань к левому краю родителя */
	right: 0; /* Прижимаем правую грань к правому краю родителя */
	bottom: 0; /* Прижимаем нижнюю грань к нижнему краю родителя */
	filter: 
	brightness(1)  /* Яркость */
	saturate(2)  /* Насыщенность */
	contrast(1.2); /* Контраст */	
	/* Применяем CSS-маску:
	   - градиент направлен по диагонали (сверху слева вниз направо)
	   - от 0% до 20% — полностью прозрачный
	   - к 100% — полностью видимый
	   - это создаёт эффект "плавного проявления" изображения */
	mask-image: linear-gradient(to bottom right, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 1));

	/* То же самое, но для WebKit-браузеров (Chrome, Safari, iOS) */
	-webkit-mask-image: linear-gradient(to bottom right, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 1));
}

.image-gradient img {
	display: block; /* Убираем лишний отступ снизу, который появляется у изображений по умолчанию */
	width: 100%; /* Ширина изображения равна ширине родительского контейнера */
	height: 100%; /* Высота изображения равна высоте родителя */
	object-fit: cover; /* Изображение будет масштабироваться, чтобы полностью заполнить блок,
	                      при этом обрезая лишнее, но сохраняя пропорции */
}

footer {
	background-color: #81c784; /* Светло-зелёный фон подвала */
	text-align: center;         /* Центрируем весь текст внутри футера */
	padding: 20px;              /* Добавляем внутренний отступ сверху и снизу */
	margin: 0;                  /* Убираем внешний отступ — футер плотно прилегает к соседним элементам */
}

.slider {
  position: relative;
  width: 80%;
  max-width: 600px;
  margin: auto;
  overflow: hidden;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
  aspect-ratio: 16 / 9; /* Задаёт высоту, чтоб слайдер не схлопывался */
}


.slides {
  display: flex;
  transition: transform 0.5s ease-in-out;
  width: 100%;
  height: 100%;
}

.slide {
  flex: 0 0 100%;
  max-width: 100%;
  height: 100%;
}

.slide img,
.slide video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/* Индикаторы */
.indicators {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 10px;
  z-index: 10;
}

.indicator {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.5);
  transition: background-color 0.3s, transform 0.3s;
}

.indicator.active {
  background-color: white;
  box-shadow: 0 0 5px rgba(0,0,0,0.4);
  transform: scale(1.2);
}

/* Кнопки */
.prev,
.next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(0,0,0,0.5);
  color: white;
  border: none;
  font-size: 2rem;
  padding: 3px 12px;
  cursor: pointer;
  z-index: 10;
  border-radius: 4px;
  user-select: none;
  opacity: 0.8;
}

.prev { left: 10px; }
.next { right: 10px; }

.prev:hover,
.next:hover {
  background: rgba(0,0,0,0.8);
  opacity: 1;
}


/* Стили для элемента с листьями винила */
.vinyl-leaves {
  width: 100px;             /* Ширина блока */
  height: 100px;            /* Высота блока */
  position: fixed;          /* Фиксированное позиционирование (не зависит от прокрутки) */
  bottom: 0px;              /* Прикреплён к нижнему краю экрана */
  left: 0px;                /* Прикреплён к левому краю экрана */
  z-index: 999;             /* Уровень наложения, чтобы элемент находился поверх других */
}

/* Стили для контейнера с винилом */
.vinyl-container {
  width: 60px;              /* Ширина контейнера */
  height: 60px;             /* Высота контейнера */
  position: fixed;          /* Фиксированное позиционирование */
  bottom: 20px;             /* Отступ снизу экрана */
  left: 20px;               /* Отступ слева от экрана */
  cursor: pointer;          /* Курсор меняется на указатель при наведении */
  z-index: 1000;            /* Выше, чем у .vinyl-leaves, чтобы быть поверх него */
  display: flex;            /* Используем flexbox для выравнивания содержимого */
  align-items: center;      /* Вертикальное выравнивание содержимого по центру */
}


/* Стили для элемента с id="vinyl" */
#vinyl {
  width: 100%;                       /* Ширина занимает всё пространство родителя */
  height: 100%;                      /* Высота — также на весь родительский элемент */
  border-radius: 50%;               /* Скругление до круга (предполагается, что элемент квадратный) */
  transition: transform 0.3s ease-in-out; /* Плавный переход при изменении transform */
}

/* Класс для вращения винила */
.rotate {
  animation: spin 4s linear infinite; /* Анимация вращения: 4 секунды, равномерно, бесконечно */
}

.vinyl-container:hover #vinyl {
  transform: scale(1.1); /* Увеличение на 10% */
}
/* Определение анимации вращения */
@keyframes spin {
  from { transform: rotate(0deg); }   /* Начальное состояние — без поворота */
  to { transform: rotate(360deg); }   /* Конечное состояние — полный оборот */
}


/* Стили для названия трека */
.track-name {
  margin-left: 12px;                 /* Отступ слева от соседнего элемента */
  font-size: 14px;                   /* Размер шрифта */
  color: white;                      /* Цвет текста */
  background: rgba(0, 0, 0, 0.7);    /* Полупрозрачный тёмный фон */
  padding: 6px 10px;                 /* Внутренние отступы по вертикали и горизонтали */
  border-radius: 8px;                /* Скруглённые углы */
  white-space: nowrap;              /* Запрет на перенос текста */
  opacity: 0;                        /* Скрыто по умолчанию */
  transform: translateY(5px);        /* Слегка сдвинуто вниз при скрытии */
  transition: opacity 0.3s ease,     /* Плавное появление */
              transform 0.3s ease;   /* Плавное движение вверх при появлении */
  pointer-events: none;             /* Отключение взаимодействия с мышью */
}

/* Показываем название трека при наведении на контейнер винила */
.vinyl-container:hover .track-name {
  opacity: 1;                        /* Делаем видимым */
  transform: translateY(0);          /* Возвращаем в исходное положение */
}

.loader {
  background: #F10C49;
  width: 22px; /* Устанавливает ширину элемента на 22 пикселя */
  aspect-ratio: 1; /* Обеспечивает пропорции 1:1 для элемента (круглая форма) */
  border-radius: 50%; /* Делает элемент круглым */
  animation: l10 1.5s infinite linear; /* Применяет анимацию 'l10' с длительностью 1.5 секунды, бесконечным повтором и линейным движением */
}

@keyframes l10 {
  /* Начальная позиция (0%) - все тени находятся в разных углах */
  0% {
    box-shadow: 
      0 -30px #F4DD51, calc(30px*0.707) calc(-30px*0.707) #E3AAD6, 30px 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 12.5% - тени немного смещаются, начинают образовывать круг */
  12.5% {
    box-shadow: 
      0 0 #F4DD51, calc(30px*0.707) calc(-30px*0.707) #E3AAD6, 30px 0 #F4DD51, calc(30px*0.707) calc(30px*0.707) #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 25% - тени продолжают двигаться, круг расширяется */
  25% {
    box-shadow: 
      0 0 #F4DD51, 0 0 #E3AAD6, 30px 0 #F4DD51, calc(30px*0.707) calc(30px*0.707) #E3AAD6,
      0 30px #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 37.5% - тени продолжают смещаться и образуют более широкий круг */
  37.5% {
    box-shadow: 
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, calc(30px*0.707) calc(30px*0.707) #E3AAD6,
      0 30px #F4DD51, calc(-30px*0.707) calc(30px*0.707) #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 50% - тени почти полностью разошлись, центр выглядит пустым */
  50% {
    box-shadow: 
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6,
      0 30px #F4DD51, calc(-30px*0.707) calc(30px*0.707) #E3AAD6, -30px 0 #F4DD51, 0 0 #E3AAD6;
  }

  /* 62.5% - тени сдвигаются обратно, формируя окружность */
  62.5% {
    box-shadow: 
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, calc(-30px*0.707) calc(30px*0.707) #E3AAD6, -30px 0 #F4DD51, calc(-30px*0.707) calc(-30px*0.707) #E3AAD6;
  }

  /* 75% - снова возвращаемся к начальной точке, но тени стали смещаться */
  75% {
    box-shadow: 
      0 -30px #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, -30px 0 #F4DD51, calc(-30px*0.707) calc(-30px*0.707) #E3AAD6;
  }

  /* 87.5% - возвращаемся почти к начальной позиции */
  87.5% {
    box-shadow: 
      0 -30px #F4DD51, calc(30px*0.707) calc(-30px*0.707) #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, calc(-30px*0.707) calc(-30px*0.707) #E3AAD6;
  }

  /* 100% - снова вернулись к исходной позиции (круг из теней) */
  100% {
    box-shadow: 
      0 -30px #F4DD51, calc(30px*0.707) calc(-30px*0.707) #E3AAD6, 30px 0 #F4DD51, 0 0 #E3AAD6,
      0 0 #F4DD51, 0 0 #E3AAD6, 0 0 #F4DD51, 0 0 #E3AAD6;
  }
}


.loader-overlay {
  position: fixed; /* Фиксирует элемент на экране */
  top: 0; /* Размещение элемента от верхней границы окна */
  left: 0; /* Размещение элемента от левой границы окна */
  width: 100%; /* Ширина элемента на весь экран */
  height: 100%; /* Высота элемента на весь экран */
  background: rgba(232, 245, 233, 1); /* Белая полупрозрачная подложка с прозрачностью 0.8 */
  display: flex; /* Используется для выравнивания контента с помощью Flexbox */
  align-items: center; /* Центрирует контент по вертикали */
  justify-content: center; /* Центрирует контент по горизонтали */
  z-index: 9999; /* Устанавливает высокий слой для поверхностного отображения */
}

/* Курсор для всего сайта */
body {
  cursor: url('../other/Arrow.cur'), auto; /* Устанавливает кастомный курсор для всего сайта */
}

/* Курсор при наведении на ссылку и кнопку */
a,
button:hover {
  cursor: url('../other/UpArrow.cur'), auto; /* Устанавливает кастомный курсор при наведении на ссылку или кнопку */
}



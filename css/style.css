/* Подключение шрифта "WinterTrees" из папки fonts */
@font-face {
  font-family: 'WinterTrees'; /* Имя, под которым будет использоваться шрифт */
  src: url('../fonts/WinterTrees.ttf') format('truetype'); /* Путь к файлу шрифта и его формат */
}

/* Глобальные стили для всех элементов */
*{
	margin: 0; /* Убирает внешние отступы (margin) по умолчанию */
	padding: 0; /* Убирает внутренние отступы (padding) по умолчанию */
	box-sizing: border-box; /* Учитывает padding и border в общей ширине и высоте элемента */
}

html, body {
    font-family: Arial, sans-serif; /* Устанавливает шрифт по умолчанию для всей страницы */
    background-color: #e8f5e9; /* Задаёт светло-зелёный фон страницы */
    color: #2e7d32; /* Задаёт тёмно-зелёный цвет текста */
    height: 100%; /* Устанавливает высоту html и body на 100% от окна браузера */
    display: flex; /* Включает flex-контейнер для body (и html, т.к. они оба указаны) */
    flex-direction: column; /* Устанавливает вертикальное направление флекс-элементов */
}

main {
    position: relative; /* Позволяет позиционировать вложенные элементы относительно блока main */
    min-height: 100%; /* Минимальная высота main — 100% от родителя */
    flex: 1; /* Заставляет main занимать всё доступное пространство между шапкой и подвалом */
}

header {
	position: relative; /* Делает header контейнером для абсолютно позиционированных вложенных элементов */
	width: 100%; /* Занимает всю ширину окна */
	min-height: 25%; /* Минимальная высота — 25% от родительского элемента */
	background-color: #81c784; /* Задаёт зелёный фон на случай, если изображение не загрузится */
	overflow: hidden; /* Скрывает всё, что выходит за пределы header */
}

.header-image {
	position: absolute; /* Абсолютное позиционирование относительно родительского header */
	width: 100%; /* Занимает всю ширину header */
	height: 100%; /* Занимает всю высоту header */
	object-fit: cover; /* Масштабирует изображение, сохраняя его пропорции, чтобы заполнить блок без искажений */
	z-index: 0; /* Помещает изображение под другие элементы в header */
}

.header-title {
	position: absolute; /* Позволяет точно позиционировать элемент внутри родителя (header) */
	top: 50%; /* Сдвигает верхний край текста к середине по вертикали */
	left: 50%; /* Сдвигает левый край текста к середине по горизонтали */
	transform: translate(-50%, -50%); /* Центрирует текст точно по центру, сдвигая его назад на половину ширины и высоты */
	color: #66bb6a; /* Светло-зелёный цвет текста */
	font-size: 8rem; /* Очень крупный шрифт */
	font-weight: bolder; /* Очень жирный шрифт */
	text-shadow: 3px 3px 10px rgba(0, 0, 0, 0.7); /* Тень под текстом для контраста и объёма */
	font-family: 'WinterTrees', sans-serif; /* Используется кастомный шрифт, с запасным вариантом */
	z-index: 1; /* Помещает текст поверх фонового изображения */
}

nav {
	background-color: #66bb6a; /* Зелёный фон для навигационного меню */
	padding: 10px 0; /* Вертикальные отступы сверху и снизу */
	text-align: center; /* Центрирует содержимое навигации по горизонтали */
}


nav ul {
	list-style: none; /* Убирает стандартные маркеры у списка */
	padding: 10px; /* Добавляет внутренний отступ внутри ul */
}

nav li {
	display: inline-block; /* Располагает пункты меню в одну линию (горизонтально) */
	margin: 0 10px; /* Добавляет горизонтальные отступы между пунктами меню */
}

nav a {
	padding: 10px 20px; /* Пространство внутри кнопки (сверху/снизу 10px, слева/справа 20px) */
	background-color: white; /* Белый фон кнопки */
	color: #2e7d32; /* Тёмно-зелёный цвет текста */
	text-decoration: none; /* Убирает подчёркивание у ссылок */
	border-radius: 5px; /* Скруглённые углы у кнопок */
	font-weight: bold; /* Жирное начертание текста */
	transition: background-color 0.3s; /* Плавное изменение цвета фона при наведении */
}

nav a:hover,
nav a.active {
	background-color: #c8e6c9; /* Меняет фон ссылки на светло-зелёный при наведении или если у неё есть класс .active */
}

.page {
	position: absolute; /* Позволяет позиционировать страницу независимо от потока документа */
	opacity: 0; /* Делает элемент полностью прозрачным */
	visibility: hidden; /* Прячет элемент визуально и делает его недоступным для клика */
	transition: opacity 0.5s, transform 0.5s; /* Плавный переход для появления и смещения */
	transform: translateY(20px); /* Смещает элемент вниз при скрытии — создаёт эффект "выпадания" при появлении */
}

#home:target ~ main .home,
#about:target ~ main .about,
#gallery:target ~ main .gallery,
#contact:target ~ main .contact {
	position: relative; /* Делает элемент позиционируемым, возвращает в поток документа */
	opacity: 1; /* Делает страницу видимой */
	visibility: visible; /* Показывает элемент */
	transform: translateY(0); /* Отменяет смещение — элемент возвращается в нормальное положение */
	z-index: 1; /* Помещает видимую страницу выше других */
	padding: 0; /* Убирает отступы */
	margin: 40px; /* Добавляет внешний отступ со всех сторон */
	border-radius: 20px; /* Скруглённые углы блока */
	background-color: #c8e6c9; /* Светло-зелёный фон активной страницы */
}

body:not(:has(:target)) main .home {
	position: relative; /* Ставит .home в нормальный поток документа */
	opacity: 1; /* Делает .home полностью видимой */
	visibility: visible; /* Убедительно показывает элемент (без hidden) */
	transform: translateY(0); /* Возвращает элемент в исходное положение (без смещения) */
	z-index: 1; /* Помещает .home выше других слоёв, если есть наложения */
}

.ecowood-section {
	display: flex; /* Используем Flexbox для размещения дочерних элементов (текст и изображение) в строку */
	padding: 0; /* Убираем внутренние отступы у всей секции */
	margin: 0; /* Убираем внешние отступы */
	height: 100%; /* Высота секции равна 100% от родителя (можно адаптировать под задачу) */
	overflow: hidden; /* Всё, что выходит за границы блока, будет скрыто */
	border-radius: 20px; /* Скругляем углы всей секции */
}

.ecowood-text {
	flex: 1; /* Заставляем текстовый блок занимать всё свободное пространство */
	padding: 40px; /* Добавляем внутренние отступы вокруг текста */
	box-sizing: border-box; /* Включает padding в расчёт общей ширины/высоты, чтобы ничего не "выпирало" */
}

.ecowood-image {
	position: relative; /* Готовим блок под возможное позиционирование вложенных элементов (например, иконок) */
	height: auto; /* Высота определяется содержимым (например, изображением) */
	width: 30%; /* Задаём ширину блока с изображением — 30% от ширины секции */
	overflow: hidden; /* Скрываем лишнее, если изображение выходит за рамки блока */
	border-radius: 20px; /* Скругляем углы блока с изображением */
}


.image-gradient {
	position: absolute; /* Абсолютное позиционирование: элемент будет наложен поверх родительского */
	top: 0; /* Прижимаем верхнюю грань к верхнему краю родителя */
	left: 0; /* Прижимаем левую грань к левому краю родителя */
	right: 0; /* Прижимаем правую грань к правому краю родителя */
	bottom: 0; /* Прижимаем нижнюю грань к нижнему краю родителя */
	filter: 
	brightness(1)  /* Яркость */
	saturate(2)  /* Насыщенность */
	contrast(1.2); /* Контраст */	
	/* Применяем CSS-маску:
	   - градиент направлен по диагонали (сверху слева вниз направо)
	   - от 0% до 20% — полностью прозрачный
	   - к 100% — полностью видимый
	   - это создаёт эффект "плавного проявления" изображения */
	mask-image: linear-gradient(to bottom right, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 1));

	/* То же самое, но для WebKit-браузеров (Chrome, Safari, iOS) */
	-webkit-mask-image: linear-gradient(to bottom right, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 1));
}

.image-gradient img {
	display: block; /* Убираем лишний отступ снизу, который появляется у изображений по умолчанию */
	width: 100%; /* Ширина изображения равна ширине родительского контейнера */
	height: 100%; /* Высота изображения равна высоте родителя */
	object-fit: cover; /* Изображение будет масштабироваться, чтобы полностью заполнить блок,
	                      при этом обрезая лишнее, но сохраняя пропорции */
}

footer {
	background-color: #81c784; /* Светло-зелёный фон подвала */
	text-align: center;         /* Центрируем весь текст внутри футера */
	padding: 20px;              /* Добавляем внутренний отступ сверху и снизу */
	margin: 0;                  /* Убираем внешний отступ — футер плотно прилегает к соседним элементам */
}

.slider {
	position: relative; /* Позволяет позиционировать дочерние элементы (например, стрелки/индикаторы) относительно слайдера */
	width: 80%; /* Ширина слайдера — 80% от родительского контейнера */
	max-width: 600px; /* Максимальная ширина: не будет шире 600px, даже на больших экранах */
	margin: auto; /* Горизонтальное выравнивание по центру */
	overflow: hidden; /* Обрезает всё, что выходит за границы слайдера (нужно, чтобы показывался только один слайд) */
	border-radius: 10px; /* Скруглённые углы слайдера */
	box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* Тень под слайдером для объёма и стиля */
}

.slides {
	display: flex; /* Отображаем слайды в ряд (в одну строку) */
	transition: transform 0.5s ease-in-out; /* Плавное перемещение при смене слайдов */
	width: 100%; /* Ширина контейнера для слайдов (можно переопределять при необходимости) */
}

.slide {
	flex: 0 0 100%; /* Каждый слайд не сжимается и не расширяется, занимает ровно 100% ширины */
	max-width: 100%; /* Ширина слайда не превышает 100% ширины контейнера */
}

.slide img,
.slide video {
	width: 100%;            /* Изображение или видео растягивается на всю ширину слайда */
	height: 100%;           /* Растягивается по высоте слайдера (заполняет весь блок) */
	object-fit: cover;      /* Контент заполняет контейнер полностью, обрезая лишнее, но сохраняя пропорции */
	display: block;         /* Убирает лишние отступы (по умолчанию у <img> есть отступ снизу как у inline-элемента) */
}

/* Кнопки переключения слайдов */
.prev,
.next {
	position: absolute;               /* Абсолютное позиционирование относительно .slider */
	top: 50%;                         /* Размещаем по вертикали по центру */
	transform: translateY(-50%);      /* Смещаем вверх на 50% от собственной высоты для идеального центрирования */
	background: rgba(0,0,0,0.4);      /* Полупрозрачный чёрный фон */
	color: white;                     /* Цвет текста (стрелки или символа) — белый */
	border: none;                     /* Убираем рамку */
	font-size: 2rem;                  /* Размер текста/иконки внутри кнопки */
	padding: 0 12px;                  /* Горизонтальный внутренний отступ */
	cursor: pointer;                  /* При наведении курсор становится "указателем" */
	z-index: 10;                      /* Помещаем кнопки поверх других элементов */
	border-radius: 4px;              /* Скругляем углы */
	user-select: none;               /* Запрещаем выделение текста (чтобы случайно не выделялось при клике) */
}

.prev {
	left: 10px; /* Кнопка "назад" прижата к левому краю слайдера, отступ 10px */
}

.next {
	right: 10px; /* Кнопка "вперёд" прижата к правому краю слайдера, отступ 10px */
}

.prev:hover,
.next:hover {
	background: rgba(0,0,0,0.7); /* При наведении — более тёмный фон для кнопок */
}

/* Стили для элемента с листьями винила */
.vinyl-leaves {
  width: 100px;             /* Ширина блока */
  height: 100px;            /* Высота блока */
  position: fixed;          /* Фиксированное позиционирование (не зависит от прокрутки) */
  bottom: 0px;              /* Прикреплён к нижнему краю экрана */
  left: 0px;                /* Прикреплён к левому краю экрана */
  z-index: 999;             /* Уровень наложения, чтобы элемент находился поверх других */
}

/* Стили для контейнера с винилом */
.vinyl-container {
  width: 60px;              /* Ширина контейнера */
  height: 60px;             /* Высота контейнера */
  position: fixed;          /* Фиксированное позиционирование */
  bottom: 20px;             /* Отступ снизу экрана */
  left: 20px;               /* Отступ слева от экрана */
  cursor: pointer;          /* Курсор меняется на указатель при наведении */
  z-index: 1000;            /* Выше, чем у .vinyl-leaves, чтобы быть поверх него */
  display: flex;            /* Используем flexbox для выравнивания содержимого */
  align-items: center;      /* Вертикальное выравнивание содержимого по центру */
}


/* Стили для элемента с id="vinyl" */
#vinyl {
  width: 100%;                       /* Ширина занимает всё пространство родителя */
  height: 100%;                      /* Высота — также на весь родительский элемент */
  border-radius: 50%;               /* Скругление до круга (предполагается, что элемент квадратный) */
  transition: transform 0.3s ease-in-out; /* Плавный переход при изменении transform */
}

/* Класс для вращения винила */
.rotate {
  animation: spin 4s linear infinite; /* Анимация вращения: 4 секунды, равномерно, бесконечно */
}

/* Определение анимации вращения */
@keyframes spin {
  from { transform: rotate(0deg); }   /* Начальное состояние — без поворота */
  to { transform: rotate(360deg); }   /* Конечное состояние — полный оборот */
}


/* Стили для названия трека */
.track-name {
  margin-left: 12px;                 /* Отступ слева от соседнего элемента */
  font-size: 14px;                   /* Размер шрифта */
  color: white;                      /* Цвет текста */
  background: rgba(0, 0, 0, 0.7);    /* Полупрозрачный тёмный фон */
  padding: 6px 10px;                 /* Внутренние отступы по вертикали и горизонтали */
  border-radius: 8px;                /* Скруглённые углы */
  white-space: nowrap;              /* Запрет на перенос текста */
  opacity: 0;                        /* Скрыто по умолчанию */
  transform: translateY(5px);        /* Слегка сдвинуто вниз при скрытии */
  transition: opacity 0.3s ease,     /* Плавное появление */
              transform 0.3s ease;   /* Плавное движение вверх при появлении */
  pointer-events: none;             /* Отключение взаимодействия с мышью */
}

/* Показываем название трека при наведении на контейнер винила */
.vinyl-container:hover .track-name {
  opacity: 1;                        /* Делаем видимым */
  transform: translateY(0);          /* Возвращаем в исходное положение */
}

